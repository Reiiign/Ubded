<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprCollisionMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
MovementInput[0]=Button.Right;
MovementInput[1]=Button.Up;
MovementInput[2]=Button.Left;
MovementInput[3]=Button.Down;
Health = 100;
MaxHealth = Health;
Speed = 2;
AttackSpeed=3;
DirX = 0;
DirY = 0;
DirFacing = 0;
DirLast = 0;
Weapon = 0;
AttackTimer = 0;
Direction = 0;
image_speed = 0;
bGodMode = false;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///AttackTimer
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle Input
DirX = 0;
DirY = 0;

if(Health &lt;= 0 and !bGodMode)
{
    global.bGameOver = true;
    exit;
}

for(var i = 0; i &lt; 4; ++i)
{
    if(keyboard_check(MovementInput[i]))
    {
        var _angle = i*90;
        DirX += lengthdir_x(1, _angle);
        DirY += lengthdir_y(1, _angle);
        //DirFacing = i;
    }
}

//If we're trying to move
if(point_distance(0,0,DirX,DirY) &gt; 0)
{
    //Get direction angle
    Direction = point_direction(0,0,DirX,DirY);
    
    //scrMoveGM(Speed,_angle);
    scrMove(Speed, Direction);
    
    if(x &lt; 8)
        x = 8
    if(y &lt; 8)
        y = 8
    if(y &gt; room_height-8)
        y = room_height-8;
    if(x &gt; room_width-8)
        x = room_width-8;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Use Item
var localdir = -1;

switch(global.InputType)
{
    case 0: // Zelda
        if(keyboard_check(vk_left))
            localdir = Direction;
        break;
    case 1: // Boi
        var aimx = keyboard_check(vk_right)-keyboard_check(vk_left);
        var aimy = keyboard_check(vk_down)-keyboard_check(vk_up);
        
        if(aimx+aimy != 0)//if(mouse_check_button(mb_left))
        {
            localdir = point_direction(x,y,x+aimx,y+aimy);
        }
        break;
    case 2: // NT
        if(mouse_check_button(mb_left))
            localdir = point_direction(x,y,mouse_x,mouse_y);
        break;
}

if(localdir &gt; -1)//if(mouse_check_button(mb_left))
{
    if(alarm[0] &lt;= 0)
    {
        switch(Weapon)
        {
            case 0: //Pistol
                var bullet = instance_create(x,y,objBullet);
                bullet.direction = localdir;//DirFacing * 90;
                alarm[0] = 15;
                audio_play_sound(sndShoot,0,false);
                break;
            case 1: //SMG
                var bullet = instance_create(x,y,objBullet);
                accuracy = irandom_range(-10,10);
                bullet.direction = localdir+accuracy;//DirFacing * 90;
                alarm[0] = 9;
                audio_play_sound(sndShoot,0,false);
                break;
            case 2://Shotgun
                var accuracy = 0;
                
                for(var i = 0; i &lt; 5; ++i)
                {
                    accuracy = irandom_range(-10,10);
                    var bullet = instance_create(x,y,objBullet);
                    bullet.direction = localdir+accuracy;//DirFacing * 90;
                }
                alarm[0] = 45;
                audio_play_sound(sndDeath,0,false);
                break;
            case 3://Grenade
                alarm[0] = 120;
                var bullet = instance_create(x,y,objGrenade);
                bullet.direction = localdir;//DirFacing * 90;
                break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Input - Hotbar
if(keyboard_check_pressed(ord("0")))
{
    if(bGodMode)
        bGodMode = false;
    else
        bGodMode = true;
}

if(keyboard_check_pressed(ord("1")))
{
    Weapon = 0;
}
else if(keyboard_check_pressed(ord("2")))
{
    Weapon = 1;
}
else if(keyboard_check_pressed(ord("3")))
{
    Weapon = 2;
}
else if(keyboard_check_pressed(ord("4")))
{
    Weapon = 3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
